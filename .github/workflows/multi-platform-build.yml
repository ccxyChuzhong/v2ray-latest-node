name: Multi-Platform Build and Release

on:
  push:
    tags:
      - 'v*'  # ÂΩìÊé®ÈÄÅ‰ª• v ÂºÄÂ§¥ÁöÑÊ†áÁ≠æÊó∂Ëß¶ÂèëÔºåÂ¶Ç v1.0.0
  workflow_dispatch:  # ÂÖÅËÆ∏ÊâãÂä®Ëß¶Âèë

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Get version
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=dev-build-$(date +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT
          fi

  build-macos:
    name: Build macOS App
    needs: version
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Enable macOS build
        run: flutter config --enable-macos-desktop
        
      - name: Build macOS
        run: flutter build macos --release
        
      - name: List build directory
        run: ls -la build/macos/Build/Products/Release/
        
      - name: Compress macOS app
        run: |
          cd build/macos/Build/Products/Release
          # Á°Æ‰øùÊâæÂà∞ .app Êñá‰ª∂ÔºåÂπ∂Â§ÑÁêÜÂèØËÉΩÁöÑÁ©∫Ê†º
          APP_NAME=$(find . -maxdepth 1 -name "*.app" -print | head -n 1)
          if [ -z "$APP_NAME" ]; then
            echo "No .app file found in directory"
            exit 1
          fi
          # ÁßªÈô§Ë∑ØÂæÑÂâçÁºÄ ./
          APP_NAME=${APP_NAME#./}
          echo "Found app: $APP_NAME"
          # ÂàõÂª∫ zip Êñá‰ª∂
          zip -r "app-macOS-${{ needs.version.outputs.version }}.zip" "$APP_NAME"
        
      - name: Upload macOS artifact
        uses: actions/upload-artifact@main
        with:
          name: macos-app
          path: build/macos/Build/Products/Release/*.zip
          
  build-windows:
    name: Build Windows App
    needs: version
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Enable Windows build
        run: flutter config --enable-windows-desktop
        
      - name: Build Windows
        run: flutter build windows --release
        
      - name: Verify build directory
        run: |
          $buildDir = "build\windows\runner\Release"
          if (Test-Path $buildDir) {
            Write-Host "Build directory exists: $buildDir"
            Get-ChildItem $buildDir
          } else {
            Write-Host "Build directory does not exist: $buildDir"
            Write-Host "Checking parent directories:"
            if (Test-Path "build\windows\runner") {
              Write-Host "Runner directory exists:"
              Get-ChildItem "build\windows\runner"
            } elseif (Test-Path "build\windows") {
              Write-Host "Windows directory exists:"
              Get-ChildItem "build\windows"
            }
          }
        
      - name: Compress Windows app
        run: |
          $buildDir = "build\windows\runner\Release"
          if (Test-Path $buildDir) {
            cd $buildDir
            Compress-Archive -Path * -DestinationPath "app-windows-${{ needs.version.outputs.version }}.zip"
          } else {
            Write-Host "Build directory not found, checking for alternative locations..."
            $altDir = Get-ChildItem -Path "build\windows" -Recurse -Directory | Where-Object { $_.Name -eq "Release" } | Select-Object -First 1
            if ($altDir) {
              Write-Host "Found alternative Release directory: $($altDir.FullName)"
              cd $altDir.FullName
              Compress-Archive -Path * -DestinationPath "app-windows-${{ needs.version.outputs.version }}.zip"
            } else {
              Write-Host "No Release directory found"
              exit 1
            }
          }
        
      - name: Upload Windows artifact
        uses: actions/upload-artifact@main
        with:
          name: windows-app
          path: |
            build/windows/runner/Release/*.zip
            build/windows/**/Release/*.zip
  
  build-android:
    name: Build Android App
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'  # Êõ¥Êñ∞‰∏∫ Java 17
        
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Setup Android signing
        run: |
          if [ "${{ secrets.KEYSTORE_BASE64 }}" != "" ]; then
            echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
            echo "storeFile=keystore.jks" > android/key.properties
            echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
            echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
            echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
            echo "Signing configuration created."
          else
            echo "No signing configuration provided, building unsigned APK."
          fi
        
      - name: Build APK
        run: flutter build apk --release
        
      - name: Build App Bundle
        run: flutter build appbundle --release
        
      - name: Check APK exists
        run: |
          if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            echo "APK exists"
          else
            echo "Looking for debug APK as fallback..."
            if [ -f "build/app/outputs/flutter-apk/app-debug.apk" ]; then
              echo "Debug APK exists, using it as fallback"
              cp build/app/outputs/flutter-apk/app-debug.apk build/app/outputs/flutter-apk/app-release.apk
            else
              echo "No APK found"
              find build -name "*.apk"
            fi
          fi
        
      - name: Upload APK artifact
        uses: actions/upload-artifact@main
        with:
          name: android-apk
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/flutter-apk/app-*.apk
          
      - name: Upload AAB artifact
        uses: actions/upload-artifact@main
        with:
          name: android-aab
          path: |
            build/app/outputs/bundle/release/app-release.aab
            build/app/outputs/bundle/release/app-*.aab
          
  create-release:
    name: Create GitHub Release
    needs: [version, build-macos, build-windows, build-android]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
          
      - name: Display structure of downloaded files
        run: find artifacts -type f | sort
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.version.outputs.version }}
          name: Release ${{ needs.version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            artifacts/macos-app/*.zip
            artifacts/windows-app/*.zip
            artifacts/android-apk/*.apk
            artifacts/android-aab/*.aab
          body: |
            ## Release ${{ needs.version.outputs.version }}
            
            ### Downloads
            - üì± Android: app-release.apk
            - üñ•Ô∏è Windows: app-windows-${{ needs.version.outputs.version }}.zip
            - üçé macOS: app-macOS-${{ needs.version.outputs.version }}.zip
            
            ### Changes
            - [Add your release notes here]
